#!/usr/bin/env python3

import argparse
import random

ap = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter)
ap.add_argument('-w', '--words', default=4, type=int, help='include WORDS words in the password')
ap.add_argument('-c', '--caps', default=0, type=int, help='capitalize the first letter of CAPS random words')
ap.add_argument('-n', '--numbers', default=0, type=int, help='insert NUMBERS random numbers in the password')
ap.add_argument('-s', '--symbols', default=0, type=int, help='insert SYMBOLS random symbols in the password')
args = ap.parse_args()

def random_word(caps):
    word = random.choice(open('words_alpha.txt').read().splitlines())
    if caps:
        return word.capitalize()
    else:
        return word

def add_random_numbers(word, front, count):
    for i in range(count):
        if front:
            word = str(random.randrange(10)) + word
        else:
            word =  word + str(random.randrange(10))
    return word

def add_random_symbols(word, front, count):
    for i in range(count):
        if front:
            word = random.choice('~!@#$%^&*.:;') + word
        else:
            word =  word + random.choice('~!@#$%^&*.:;')
    return word

password, numbersCount, symbolsCount  = '', args.numbers, args.symbols
capsPositions = random.sample(list(range(args.words)), min(args.words, args.caps))
for i in range(args.words):
    word = random_word(i in capsPositions)
    if random.choice((True, False)):
        n, s = random.randrange(numbersCount + 1), random.randrange(symbolsCount + 1)
        numbersCount, symbolsCount  = numbersCount - n, symbolsCount - s
        word = add_random_numbers(word, random.choice((True, False)), n)
        word = add_random_symbols(word, random.choice((True, False)), s)
    if i == args.words - 1:
        word = add_random_numbers(word, random.choice((True, False)), numbersCount)
        word = add_random_symbols(word, random.choice((True, False)), symbolsCount)
    password = password + word
print(password)